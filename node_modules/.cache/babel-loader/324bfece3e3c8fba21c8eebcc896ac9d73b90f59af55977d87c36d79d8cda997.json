{"ast":null,"code":"var _jsxFileName = \"/Users/vamsiboppe/American_Technology_NGO/vendor_mgmt_app/src/components/QuoteUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteUploader({\n  vendorId,\n  onUpload\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (file) {\n      onUpload({\n        vendorId,\n        file\n      });\n      setFile(null); // Reset the file input after upload\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"quote-file\",\n        children: \"Upload Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"quote-file\",\n        name: \"quote-file\",\n        accept: \"application/pdf, .docx, .xlsx\",\n        onChange: handleFileChange,\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-primary\",\n        children: \"Upload Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(QuoteUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = QuoteUploader;\nexport default QuoteUploader;\nvar _c;\n$RefreshReg$(_c, \"QuoteUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuoteUploader","vendorId","onUpload","_s","file","setFile","handleFileChange","e","selectedFile","target","files","handleSubmit","preventDefault","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","accept","onChange","required","_c","$RefreshReg$"],"sources":["/Users/vamsiboppe/American_Technology_NGO/vendor_mgmt_app/src/components/QuoteUploader.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction QuoteUploader({ vendorId, onUpload }) {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (file) {\n      onUpload({ vendorId, file });\n      setFile(null); // Reset the file input after upload\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"form-label\" htmlFor=\"quote-file\">Upload Quote</label>\n        <input\n          type=\"file\"\n          id=\"quote-file\"\n          name=\"quote-file\"\n          accept=\"application/pdf, .docx, .xlsx\"\n          onChange={handleFileChange}\n          className=\"form-input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-actions\">\n        <button type=\"submit\" className=\"button-primary\">\n          Upload Quote\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default QuoteUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtC,IAAIF,YAAY,EAAE;MAChBH,OAAO,CAACG,YAAY,CAAC;IACvB;EACF,CAAC;EAED,MAAMG,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIR,IAAI,EAAE;MACRF,QAAQ,CAAC;QAAED,QAAQ;QAAEG;MAAK,CAAC,CAAC;MAC5BC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMc,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC5ChB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAE,QAAA,gBACzBhB,OAAA;QAAOc,SAAS,EAAC,YAAY;QAACG,OAAO,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvErB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfC,IAAI,EAAC,YAAY;QACjBC,MAAM,EAAC,+BAA+B;QACtCC,QAAQ,EAAEnB,gBAAiB;QAC3BO,SAAS,EAAC,YAAY;QACtBa,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAE,QAAA,eAC3BhB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAEjD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACjB,EAAA,CAxCQH,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}